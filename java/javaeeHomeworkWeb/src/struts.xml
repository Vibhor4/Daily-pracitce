<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
    <constant name="struts.enable.DynamicMethodInvocation" value="false"/>
    <constant name="struts.devMode" value="true"/>


    <include file="global.xml"/>


    <package name="struts2" namespace="/dessert"
             extends="default">

        <action name="Login_*" method="{1}" class="action.UserLogin">
            <!--"success" is the default result code, so the framework will use the "Menu" action as response. (Which we haven't written yet.)-->
            <result type="redirectAction">Account</result>
            <result name="input">/jsp/UserLogin.jsp</result>
            <interceptor-ref name="defaultStack"/>
        </action>

        <action name="Register_*" method="{1}" class="action.Register">
            <result>/jsp/Account.jsp</result>
            <result name="input">/jsp/Register.jsp</result>
            <interceptor-ref name="defaultStack"/>
        </action>

        <action name="InnerLogin_*" method="{1}" class="action.InnerLogin">
            <result name="input">/jsp/InnerLogin.jsp</result>
            <!-- redirect and not forward-->
            <result type="redirectAction" name="manager">ManagerSession</result>
            <result type="redirectAction" name="waiter0">Waiter0Session</result>
            <result type="redirectAction" name="waiter1">OtherWaiterSession</result>
            <interceptor-ref name="defaultStack"/>
        </action>

        <action name="InnerRegister_*" method="{1}" class="action.InnerRegister">
            <result name="input">/jsp/InnerRegister.jsp</result>
            <result>/jsp/InnerLogin.jsp</result>
            <!-- redirect and not forward-->
            <interceptor-ref name="defaultStack"/>
        </action>

        <action name="ManagerSession">
            <result></result>
        </action>

        <action name="Waiter0Session" class="action.Waiter0">
            <result>/jsp/Waiter0.jsp</result>
        </action>

        <action name="OtherWaiterSession" class="action.OtherWaiter">
            <result>/jsp/OtherWaiter.jsp</result>
        </action>

        <action name="Account" class="action.Account">
            <result name="success">/jsp/Account.jsp</result>
        </action>


        <action name="Branch" class="action.Branch">
            <result>/jsp/Branch.jsp</result>
        </action>

        <action name="Branches">
            <result>/jsp/Branches.jsp</result>
        </action>


    </package>

    <package name="ajax" namespace="/dessert" extends="json-default">

        <action name="Reserve*" class="action.Account" method="reserve{1}">
            <!--the action will return a json to use in a page-->
            <result type="json">/jsp/Account.jsp</result>
        </action>

        <action name="BranchReserve*" class="action.Reserve" method="branchReserve{1}">
            <result type="json">/jsp/Branch.jsp</result>
        </action>

        <action name="Pay*" class="action.Account" method="pay{1}">
            <!--the action will return a json rather than a page-->
            <result type="json">/jsp/Account.jsp</result>
        </action>

        <action name="Plan*" class="action.Plan" method="plan{1}">
            <!--the action will return a json rather than a page-->
            <result type="json">/jsp/Account.jsp</result>
        </action>

        <action name="SendMsg" class="action.Message">
            <result type="json">/jsp/OtherWaiter.jsp</result>
        </action>

        <action name="list" class="action.Account" method="reserveList">
            <result type="json">
                <!--just for debug-->
            </result>
        </action>


    </package>

</struts>
